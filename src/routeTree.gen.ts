/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WatchlistRouteImport } from './routes/watchlist'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TvIdRouteImport } from './routes/tv.$id'
import { Route as MovieIdRouteImport } from './routes/movie.$id'

const WatchlistRoute = WatchlistRouteImport.update({
  id: '/watchlist',
  path: '/watchlist',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TvIdRoute = TvIdRouteImport.update({
  id: '/tv/$id',
  path: '/tv/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const MovieIdRoute = MovieIdRouteImport.update({
  id: '/movie/$id',
  path: '/movie/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
  '/tv/$id': typeof TvIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
  '/tv/$id': typeof TvIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/watchlist': typeof WatchlistRoute
  '/movie/$id': typeof MovieIdRoute
  '/tv/$id': typeof TvIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/watchlist' | '/movie/$id' | '/tv/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/watchlist' | '/movie/$id' | '/tv/$id'
  id: '__root__' | '/' | '/watchlist' | '/movie/$id' | '/tv/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WatchlistRoute: typeof WatchlistRoute
  MovieIdRoute: typeof MovieIdRoute
  TvIdRoute: typeof TvIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/watchlist': {
      id: '/watchlist'
      path: '/watchlist'
      fullPath: '/watchlist'
      preLoaderRoute: typeof WatchlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tv/$id': {
      id: '/tv/$id'
      path: '/tv/$id'
      fullPath: '/tv/$id'
      preLoaderRoute: typeof TvIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movie/$id': {
      id: '/movie/$id'
      path: '/movie/$id'
      fullPath: '/movie/$id'
      preLoaderRoute: typeof MovieIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WatchlistRoute: WatchlistRoute,
  MovieIdRoute: MovieIdRoute,
  TvIdRoute: TvIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
